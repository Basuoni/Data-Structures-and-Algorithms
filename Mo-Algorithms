#include<bits/stdc++.h>
#define FIO ios_base::sync_with_stdio(0);cin.tie(0);
using namespace std;
typedef long long ll;

const int MOD=1e9+7, OO=0x3f3f3f3f;
const ll LOO=0x3f3f3f3f3f3f3f3f;
const long double EPS=1e-8;


struct query{
  int l=-1;
  int r=-1;
  int qi=-1;
  int bi=-1;
  query(int _l, int _r, int _qi, int sqr) : l(_l), r(_r), qi(_qi), bi(_l/sqr) {}
  bool operator <(const query& q2) const{
    if(bi!=q2.bi) return bi<q2.bi;
    return r<q2.r;
  }
};

void add(int i, vector<int>& arr, int &res){
  res+=arr[i];
}
void remove(int i, vector<int>& arr, int &res){
  res-=arr[i];
}

vector<int> MO(vector<int>& arr, vector<query>& queries){
  int res=0;
  vector<int>ans(queries.size());
  sort(queries.begin(), queries.end());
  int l=1,r=0;
  for(auto& q : queries){
    while(l<q.l) remove(l++,arr,res);
    while(l>q.l) add(--l,arr,res);
    while(r<q.r) add(++r,arr,res);
    while(r>q.r) remove(r--,arr,res);
    ans[q.qi]=res;
  }
  return ans;
}

int main(){
  FIO
  //  freopen("input.txt","rt",stdin);
  //  freopen("output.txt","wt",stdout);
  int n;
  cin>>n;
  int sqr=(int)ceil(sqrt(n));
  vector<int>arr(n);
  for(int& x : arr) cin>>x;
  int m;
  cin>>m;
  vector<query>queries;
  for(int i=0; i<m; i++){
    int l,r;
    cin>>l>>r;
    queries.push_back(query(l-1,r-1,i,sqr));
  }
  auto ans=MO(arr,queries);
  for(auto& x : ans) cout<<x<<'\n';


  return 0;
  
}
